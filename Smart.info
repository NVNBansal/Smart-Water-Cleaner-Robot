#include <Servo.h>

// Define ultrasonic sensor pins
#define TRIG_PIN 8
#define ECHO_PIN 9

// Define motor driver pins
#define ENA 5
#define IN1 2
#define IN2 3
#define IN3 4
#define IN4 7
#define ENB 6

// Define servo motor
Servo myServo;

// Define speed (0 - 255)
#define Speed 160  

void setup() {
  Serial.begin(9600);
  
  // Set ultrasonic sensor pins
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  
  // Set motor control pins as output
  pinMode(ENA, OUTPUT);
  pinMode(ENB, OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

  // Attach servo motor to pin 10
  myServo.attach(10);

  // Set initial speed
  analogWrite(ENA, Speed);
  analogWrite(ENB, Speed);
}

void loop() {
  myServo.write(90);  // Center position
  delay(500);
  
  int distance = getDistance();
  Serial.print("Distance: ");
  Serial.println(distance);

  if (distance < 15) { 
    Stop();
    Serial.println("Obstacle detected! Scanning...");

    delay(500);
    myServo.write(30);  // Look left
    delay(500);
    int leftDistance = getDistance();

    myServo.write(150); // Look right
    delay(500);
    int rightDistance = getDistance();

    myServo.write(90);  // Center again
    delay(500);

    if (leftDistance > rightDistance) {
      left();
      Serial.println("Turning Left");
    } else {
      right();
      Serial.println("Turning Right");
    }
    delay(600);
  } else {
    forward();
    Serial.println("Moving Forward");
  }
}

// Function to measure distance using ultrasonic sensor
int getDistance() {
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(4);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  long t = pulseIn(ECHO_PIN, HIGH);
  int cm = t / 29 / 2;
  return cm;
}

// Motor movement functions
void forward() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void left() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void right() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void Stop() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}
